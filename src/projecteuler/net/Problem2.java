package projecteuler.net;

/**
 * URL: https://projecteuler.net/problem=2
 * Even Fibonacci numbers
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
 *  the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * */

public class Problem2 {

	private Integer result;
	private Integer exceed; 
	
	public Integer getResult() {
		return result;
	}

	public void setResult(Integer result) {
		this.result = result;
	}
	
	public Integer getExceed() {
		return exceed;
	}

	public void setExceed(Integer exceed) {
		this.exceed = exceed;
	}

	public void addResult(Integer number, boolean showLog) { 
		if(showLog) {
			System.out.println("even number : " + number );
		}
		setResult(getResult() + number);
	}
	
	public Problem2() {
		this.result = 0;
		this.exceed = 0;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Problem2 fibonacci = new Problem2();
		
		fibonacci.setExceed(4000000);
		
		Integer aux = 0;
		
		for(int i = 0; i < fibonacci.getExceed(); i++) {
			
			aux = fibonacci.fibonacci(i);
			
			if(aux < fibonacci.getExceed()) {
				
				if((aux & 1) == 0) {
					fibonacci.addResult(aux, true);
				} else {
					System.err.println("ODD : " + aux);
				}
				
			} else { 
				System.out.println("end of the road ... " + fibonacci.getResult());
				break;
			}
			
		}
	}
	
	private int fibonacci(int n) {
		
		int value = 0;
		
	    if (n > 1) {
	    	value = fibonacci(n-1) + fibonacci(n-2);  //función recursiva
	    	return value;
	    } else if (n == 1) {  
	        return 1;
	    } else if (n == 0){  
	        return 0;
	    } else{ 
	        System.out.println("Debes ingresar un tamaño mayor o igual a 1");
	        return -1; 
	    }
	    
	}
	
}
